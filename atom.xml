<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>前端小苏</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.lovingsu.com/"/>
  <updated>2018-04-05T12:42:59.163Z</updated>
  <id>http://www.lovingsu.com/</id>
  
  <author>
    <name>susu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>项目笔记-如何从A页面跳转到B页面指定的slide</title>
    <link href="http://www.lovingsu.com/%E9%A1%B9%E7%9B%AE%E7%AC%94%E8%AE%B0-%E5%A6%82%E4%BD%95%E4%BB%8EA%E9%A1%B5%E9%9D%A2%E8%B7%B3%E8%BD%AC%E5%88%B0B%E9%A1%B5%E9%9D%A2%E6%8C%87%E5%AE%9A%E7%9A%84slide.html"/>
    <id>http://www.lovingsu.com/项目笔记-如何从A页面跳转到B页面指定的slide.html</id>
    <published>2018-04-05T11:20:21.000Z</published>
    <updated>2018-04-05T12:42:59.163Z</updated>
    
    <content type="html"><![CDATA[<h1 id="欢迎使用马克飞象"><a href="#欢迎使用马克飞象" class="headerlink" title="欢迎使用马克飞象"></a>欢迎使用马克飞象</h1><p>昨天下班，北京竟下起了雪。这就是传说中的“雪债雪偿”吗？</p><p><img src="http://ozg6hqkcn.bkt.clouddn.com/snow.jpg" alt="enter image description here"></p><p>闲话不多说，最近在项目中遇到一个需求，B页面是一个14个slide组成的轮播样式，A页面中有14个超链接分别指向B页面对应的slide，点击超链接会跳转到对应的slide。</p><p>刚看到这个需求时，没有什么头绪，因为B页面加载进来后必然会是第一个slide。</p><p>通过翻看<a href="http://www.swiper.com.cn/" target="_blank" rel="external">swiper</a>的API，看到了slideTo（）方法,语法如下：</p><blockquote><p>mySwiper.slideTo(index, speed, runCallbacks)<br>Swiper切换到指定slide。<br>index:必选，num，指定将要切换到的slide的索引。<br>speed:可选，num(单位ms)，切换速度。<br>runCallbacks:可选，boolean，设置为false时不会触发onSlideChange回调函数。</p></blockquote><p>既然这样，自然想到可以给每个超链接带个索引，跳转过来时获取到索引，然后迅速滑到对应的slide。</p><p>A页面HTML部分<br><figure class="highlight htmlbars"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">&lt;p class="line1"&gt;</span><br><span class="line">  &lt;a href="#" data-count='0'&gt;首页&lt;/a&gt;</span><br><span class="line">  &lt;a href="#" data-count='1'&gt;个人中心&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p class="line2"&gt;</span><br><span class="line">  &lt;a href="#" data-count='2'&gt;我的课表&lt;/a&gt;</span><br><span class="line">  &lt;a href="#" data-count='3'&gt;账户余额&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p class="line3"&gt;</span><br><span class="line">  &lt;a href="#" data-count='4'&gt;我的课程&lt;/a&gt;</span><br><span class="line">  &lt;a href="#" data-count='5'&gt;我的发票&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p class="line4"&gt;</span><br><span class="line">  &lt;a href="#" data-count='6'&gt;活动报名&lt;/a&gt;</span><br><span class="line">  &lt;a href="#" data-count='7'&gt;推荐好友&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p class="line5"&gt;</span><br><span class="line">  &lt;a href="#" data-count='8'&gt;课后作业&lt;/a&gt;</span><br><span class="line">  &lt;a href="#" data-count='9'&gt;校区评价&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p class="line6"&gt;</span><br><span class="line">  &lt;a href="#" data-count='10'&gt;错题本&lt;/a&gt;</span><br><span class="line">  &lt;a href="#" data-count='11'&gt;高豆兑换&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br><span class="line">&lt;p class="line7"&gt;</span><br><span class="line">  &lt;a href="#" data-count='12'&gt;消息通知&lt;/a&gt;</span><br><span class="line">  &lt;a href="#" data-count='13'&gt;每日任务&lt;/a&gt;</span><br><span class="line">&lt;/p&gt;</span><br></pre></td></tr></table></figure></p><p>A页面JS部分<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$a = $(<span class="string">'a'</span>);</span><br><span class="line">$a.on(<span class="string">'click'</span>,<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">let</span> index = $(<span class="keyword">this</span>).attr(<span class="string">'data-count'</span>);</span><br><span class="line"><span class="built_in">window</span>.location.href = <span class="string">"./userManualsDetail.html?"</span> + <span class="string">"num="</span> + <span class="built_in">encodeURI</span>(index);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p><p>B页面JS部分<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> loc = <span class="built_in">window</span>.location.href;</span><br><span class="line"><span class="keyword">let</span> n1 = loc.length;<span class="comment">//地址的总长度</span></span><br><span class="line"><span class="keyword">let</span> n2 = loc.indexOf(<span class="string">'='</span>);<span class="comment">//取得=号的位置</span></span><br><span class="line"><span class="keyword">let</span> num = <span class="built_in">decodeURI</span>(loc.substr(n2 + <span class="number">1</span>, n1 - n2));<span class="comment">//=号后面的内容</span></span><br><span class="line"><span class="keyword">if</span> (n2&gt;<span class="number">0</span>) &#123;</span><br><span class="line">  mySwiper.slideTo(num,<span class="number">0</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>详细代码可参考我的<a href="https://github.com/suchenglin2017/a-to-b-given-slide/" target="_blank" rel="external">GitHub</a>（移动端观看）。    </p><p>今天就总结到这，明天要去驾校练车，早点休息~~  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;欢迎使用马克飞象&quot;&gt;&lt;a href=&quot;#欢迎使用马克飞象&quot; class=&quot;headerlink&quot; title=&quot;欢迎使用马克飞象&quot;&gt;&lt;/a&gt;欢迎使用马克飞象&lt;/h1&gt;&lt;p&gt;昨天下班，北京竟下起了雪。这就是传说中的“雪债雪偿”吗？&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;
      
    
    </summary>
    
      <category term="总结" scheme="http://www.lovingsu.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
  </entry>
  
  <entry>
    <title>JS乘性操作符小总结</title>
    <link href="http://www.lovingsu.com/JS%E4%B9%98%E6%80%A7%E6%93%8D%E4%BD%9C%E7%AC%A6%E5%B0%8F%E6%80%BB%E7%BB%93.html"/>
    <id>http://www.lovingsu.com/JS乘性操作符小总结.html</id>
    <published>2017-12-27T05:04:38.000Z</published>
    <updated>2017-12-27T06:52:42.404Z</updated>
    
    <content type="html"><![CDATA[<p>今天有小伙伴问我JS乘法中Infinity的用法，发现自己不太了解，想到当时的尴尬气氛，也为了以后方便查询，遂下定决心总结一番。<br><img src="http://ozg6hqkcn.bkt.clouddn.com/ganga.png" alt="enter image description here"></p><p>从头开始吧，ECMAScript共定义了三个乘性操作符：<strong>乘法</strong>、<strong>除法</strong>和<strong>求模</strong>。这些操作符与C、Java或者Perl中的相应操作符用途类型，只不过在操作数为非数值的情况下会执行自动的类型转换。如果参与乘法运算的某个操作数不是数值，后台会先使用<strong>Number()</strong>转型函数将其转换为数值。也就是说，空字符串将被当做0，布尔值true将被当做1。</p><p><strong>一、乘法</strong><br>在处理特殊值的情况下，乘法操作符遵循下列特殊的规则：</p><ul><li><p>如果操作数都是数值，执行常规的乘法运算，即两个正数或两个负数相乘的结果还是正数，而如果只有一个操作数有负号，那么结果就是负数。如果乘积超过了ECMAScript数值的表示范围，则返回<code>Infinity</code>或<code>-Infinity</code>；</p><blockquote><p>由于内存的限制，ECMAScript并不能保存世界上所有的数值。ECMAScript能够表示的最小数值保存在 <code>Number.MIN_VALUE</code>中，在大多数浏览器中，这个值是<code>5e-324</code>;能够表示的最大数值保存在<code>Number.MAX_VALUE</code>中，在大多数浏览器中，这个值是<code>1.7976931348623157e+308</code>。</p></blockquote></li><li><p>如果有一个操作数是<code>NaN</code>，则结果是<code>NaN</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">8</span>*<span class="literal">NaN</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果是<code>Infinity</code>与<code>0</code>相乘，则结果是<code>NaN</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>*<span class="number">0</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果是<code>Infinity</code>与非零数值相乘，则结果是<code>Infinity</code>或<code>-Infinity</code>，取决于操作数的符号；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>*<span class="number">3</span>) <span class="comment">//Infinity</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>*<span class="number">-3</span>) <span class="comment">//-Infinity</span></span><br></pre></td></tr></table></figure></li><li><p>如果是<code>Infinity</code>与<code>Infinity</code>相乘，则结果是<code>Infinity</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>*<span class="literal">Infinity</span>) <span class="comment">//Infinity</span></span><br></pre></td></tr></table></figure></li><li><p>如果有一个操作数不是数值，则在后台调用<code>Number()</code>将其转换为数值，然后再应用上面的规则。</p></li></ul><p><strong>二、除法</strong><br>与乘法操作符类似，除法操作符对特殊的值也有特殊的处理规则。</p><ul><li>如果操作数都是数值，执行常规的除法运算，即两个正数或两个负数相除的结果还是正数，而如果只有一个操作数有负号，那么结果就是负数。如果超过了ECMAScript数值的表示范围，则返回<code>Infinity</code>或<code>-Infinity</code>；</li><li><p>如果有一个操作数是<code>NaN</code>，则结果是<code>NaN</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">NaN</span>/<span class="number">4</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果是<code>Infinity</code>被<code>Infinity</code>除，则结果是<code>NaN</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>/<span class="literal">Infinity</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果是零被零除，则结果是<code>NaN</code>;</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span>/<span class="number">0</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果是非零的有限数被零除，则结果是<code>Infinity</code>或<code>-Infinity</code>，取决于操作数的符号；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span>/<span class="number">0</span>) <span class="comment">//Infinity</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">-3</span>/<span class="number">0</span>) <span class="comment">//-Infinity</span></span><br></pre></td></tr></table></figure></li><li><p>如果是<code>Infinity</code>被任何非零数值除，则结果是<code>Infinity</code>或<code>-Infinity</code>，取决于操作数符号；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>/<span class="number">3</span>) <span class="comment">//Infinity</span></span><br><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>/<span class="number">-5</span>) <span class="comment">//-Infinity</span></span><br></pre></td></tr></table></figure></li><li><p>如果有一个操作数不是数值，则在后台调用<code>Number()</code>将其转换为数值，然后再应用上面的规则。</p></li></ul><p><strong>三、求模</strong><br>与另外两个乘性操作符类似，求模操作符会遵循下列特殊规则处理特殊的值。</p><ul><li>如果操作数都是数值，执行常规的除法运算，返回除得的余数；</li><li><p>如果被除数是无穷大值而除数是有限大的数值，则结果是<code>NaN</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>%<span class="number">8</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果被除数是有限大的数值而除数是零，则结果是<code>NaN</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">7</span>%<span class="number">0</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果是<code>Infinity</code>被<code>Infinity</code>除，则结果是<code>NaN</code>；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="literal">Infinity</span>%<span class="literal">Infinity</span>) <span class="comment">//NaN</span></span><br></pre></td></tr></table></figure></li><li><p>如果被除数是有限大的数值而除数是无穷大的数值，则结果是被除数；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">6</span>%<span class="literal">Infinity</span>) <span class="comment">//6</span></span><br></pre></td></tr></table></figure></li><li><p>如果被除数是零，则结果是零；</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(<span class="number">0</span>%<span class="literal">Infinity</span>) <span class="comment">//0</span></span><br></pre></td></tr></table></figure></li><li><p>如果有一个操作数不是数值，则在后台调用<code>Number()</code>将其转换为数值，然后再应用上面的规则。</p></li></ul><p>今天就先总结到这里吧，如果错误，欢迎指正。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;今天有小伙伴问我JS乘法中Infinity的用法，发现自己不太了解，想到当时的尴尬气氛，也为了以后方便查询，遂下定决心总结一番。&lt;br&gt;&lt;img src=&quot;http://ozg6hqkcn.bkt.clouddn.com/ganga.png&quot; alt=&quot;enter imag
      
    
    </summary>
    
      <category term="总结" scheme="http://www.lovingsu.com/categories/%E6%80%BB%E7%BB%93/"/>
    
    
      <category term="JS操作符" scheme="http://www.lovingsu.com/tags/JS%E6%93%8D%E4%BD%9C%E7%AC%A6/"/>
    
  </entry>
  
  <entry>
    <title>vue学习填坑记之Vue.js devtools安装后无法启用</title>
    <link href="http://www.lovingsu.com/vue%E5%AD%A6%E4%B9%A0%E5%A1%AB%E5%9D%91%E8%AE%B0%E4%B9%8BVue-js-devtools%E5%AE%89%E8%A3%85%E5%90%8E%E6%97%A0%E6%B3%95%E5%90%AF%E7%94%A8.html"/>
    <id>http://www.lovingsu.com/vue学习填坑记之Vue-js-devtools安装后无法启用.html</id>
    <published>2017-11-15T07:09:55.000Z</published>
    <updated>2017-11-15T10:22:29.582Z</updated>
    
    <content type="html"><![CDATA[<p>学习一门技术的时候，总会掉进各种各样的坑里。说实话，往外爬的过程是很考验人的耐力的。此时，如果有人打扰你，你应该告诉TA,社会主义救了你…</p><p>貌似跑题了，各位看官不要介意，本人思维太跳跃，下面步入正题。</p><p>今天在调试vue代码时，发现Chrome浏览器右上角的V图标竟然悄悄变灰了，作为一个Front End Engineer,怎么能容忍这种事情发生呢？</p><p>为了日后方便查阅，特把本人的解决方法总结如下。</p><h4 id="修改插件manifest文件"><a href="#修改插件manifest文件" class="headerlink" title="修改插件manifest文件"></a>修改插件manifest文件</h4><p>找到Vue.js devtools的安装目录，可以在电脑中搜索插件的ID：nhdogjmejiglipccpnnnanhbledajbpd。我是win10系统，默认安装在C:\Users\Administrator\AppData\Local\Google\Chrome\User Data\Default\Extensions\nhdogjmejiglipccpnnnanhbledajbpd处。</p><p>点进去找到manifest.json文件并打开，persistent修改为true。<br>    <img src="http://ozg6hqkcn.bkt.clouddn.com/images/manifest%E4%BF%AE%E6%94%B9.png" alt="manifest"></p><p>上述修改后没有反应？机智的我继续往外爬。</p><h4 id="插件使用环境"><a href="#插件使用环境" class="headerlink" title="插件使用环境"></a>插件使用环境</h4><p>通过查阅文档，发现有以下两种情况。</p><p>第一，页面使用的vue如果是生产环境，即压缩版本的话，devtools的选项是默认关闭的，所以可以使用非压缩版的。</p><p>第二，页面若是使用file://形式打开的话，需要到chrome扩展程序处勾上“允许访问文件网址”。或者使用服务器查看。<br>    <img src="http://ozg6hqkcn.bkt.clouddn.com/images/vue%E8%B0%B7%E6%AD%8C%E6%8F%92%E4%BB%B6%E8%AE%BE%E7%BD%AE.png" alt="plugin"></p><p>经过一番折腾，V终于又亮了，哈哈，不错吧。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;学习一门技术的时候，总会掉进各种各样的坑里。说实话，往外爬的过程是很考验人的耐力的。此时，如果有人打扰你，你应该告诉TA,社会主义救了你…&lt;/p&gt;
&lt;p&gt;貌似跑题了，各位看官不要介意，本人思维太跳跃，下面步入正题。&lt;/p&gt;
&lt;p&gt;今天在调试vue代码时，发现Chrome浏览
      
    
    </summary>
    
      <category term="vue" scheme="http://www.lovingsu.com/categories/vue/"/>
    
    
      <category term="vue插件" scheme="http://www.lovingsu.com/tags/vue%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
</feed>
